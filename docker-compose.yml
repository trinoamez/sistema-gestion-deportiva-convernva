version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: convernva_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: convernva
      MYSQL_USER: convernva_user
      MYSQL_PASSWORD: convernva_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - convernva_network
    command: --default-authentication-plugin=mysql_native_password

  # Servidor web Apache con PHP
  web:
    image: php:8.2-apache
    container_name: convernva_web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
    networks:
      - convernva_network
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - PHP_MEMORY_LIMIT=512M
      - PHP_MAX_EXECUTION_TIME=300

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: convernva_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - convernva_network
    command: redis-server --appendonly yes

  # phpMyAdmin para gestión de base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: convernva_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      - mysql
    networks:
      - convernva_network

  # MailHog para testing de emails
  mailhog:
    image: mailhog/mailhog:latest
    container_name: convernva_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - convernva_network

  # Elasticsearch para búsquedas
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: convernva_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - convernva_network

  # Kibana para visualización de datos
  kibana:
    image: kibana:8.11.0
    container_name: convernva_kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - convernva_network

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: convernva_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - convernva_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  convernva_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


